
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="primary1" B="10" R="230" G="50" A="255"  />
    <Color x:Key="primary2" B="35" R="255" G="188" A="255"  />
    <Color x:Key="text1" B="255" R="100" G="50" A="255"  />
    <Color x:Key="primary3" B="153" R="34" G="138" A="255"  />
    <Color x:Key="text1opasity" B="255" R="100" G="50" A="170"/>




    <LinearGradientBrush x:Key="WindowGradient" EndPoint="0.5,2" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource primary1}" Offset="0.974"/>
        <GradientStop Color="{StaticResource primary2}" Offset="0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TextColor3" Color="{StaticResource primary2}"/>
    <SolidColorBrush x:Key="TextColorOp" Color="{StaticResource text1opasity}"/>
    <SolidColorBrush x:Key="TextColor2" Color="{StaticResource primary1}"/>
    <SolidColorBrush x:Key="TextColor" Color="{StaticResource text1}"/>
    <SolidColorBrush x:Key="Button.Static.Background" Color="{StaticResource primary2}"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="{StaticResource text1}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource primary3}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource text1}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style TargetType="Label" x:Key="VioletTextBlock">
        <Setter Property="ItemsControl.Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="ItemsControl.FontSize" Value="18"/>
        <Setter Property="ItemsControl.HorizontalAlignment" Value="Center"/>
        <Setter Property="ItemsControl.VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsControl.FontWeight" Value="ExtraBold"/>
        <Setter Property="ItemsControl.FontFamily" Value="Arial"/>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBox">
        <Setter Property="ItemsControl.VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsControl.Margin" Value="0,0,10,0"/>
        <Setter Property="ItemsControl.Height" Value="25"/>
        <Setter Property="ItemsControl.Background" Value="{StaticResource TextColorOp}"/>
        <Setter Property="ItemsControl.Foreground" Value="{StaticResource TextColor3}"/>
        <Setter Property="ItemsControl.FontSize" Value="16"/>
        <Setter Property="ItemsControl.FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="BotVioletText" TargetType="Label">
        <Setter Property="ItemsControl.Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="ItemsControl.FontSize" Value="15"/>
        <Setter Property="ItemsControl.HorizontalAlignment" Value="Center"/>
        <Setter Property="ItemsControl.VerticalAlignment" Value="Bottom"/>
        <Setter Property="ItemsControl.FontWeight" Value="ExtraBold"/>
        <Setter Property="ItemsControl.FontFamily" Value="Arial"/>
    </Style>
    
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MyRoudedBut" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor2}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextStyle">
        
        <Setter Property="ItemsControl.FontSize" Value="15"/>
        <Setter Property="ItemsControl.FontWeight" Value="Bold"/>
    </Style>
    
    <Style x:Key="MyComboBox" TargetType="ComboBox" BasedOn="{StaticResource TextStyle}">
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="ItemsControl.Height" Value="40"/>
        <Setter Property="ItemsControl.Width" Value="60"/>
        <Setter Property="ItemsControl.HorizontalAlignment" Value="Center"/>
        <Setter Property="ItemsControl.VerticalAlignment" Value="Center"/>

    </Style>

    <Style TargetType="TextBlock" x:Key="TextBlockItem" BasedOn="{StaticResource TextStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="StackStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Cursor" Value="Hand"/>


    </Style>

    <DataTemplate x:Key="Item">
        <TextBlock Style="{StaticResource TextBlockItem}"
                   Text="{Binding Path=Clockvalue}">
            
        </TextBlock>
    </DataTemplate>

    <Style x:Key="Check" TargetType="CheckBox">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ItemsControl.VerticalAlignment" Value="Center"/>
        <Setter Property="IsChecked" Value="true"/>
    </Style>

    <Style x:Key="DisabledStyle">
        <Setter Property="ItemsControl.Background" Value="Gray"/>
    </Style>




</ResourceDictionary>